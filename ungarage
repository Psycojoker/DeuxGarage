#!/usr/bin/env python
# encoding: utf-8

import os
import sys
import traceback
import argh

from sh import ii, sleep, tail, bti
from dateutil.parser import parse

try:
    from config import login, password
except ImportError:
    print "WARNING: config.py doesn't exist, I won't be able to talk to twitter"

NICK = "DeuxGarage"
SERVER = "irc.freenode.net"
FOLDER = "irc"
PORT = 6667


class Chan(object):
    def __init__(self, path):
        self.path = path
        self.name = path.split("/")[-1]

    def write(self, string):
        string = str(string)
        if not string.endswith("\n"):
            string += "\n"

        with open(os.path.join(self.path, "in"), "w") as chan:
            chan.write(string)

    def read_path(self):
        assert os.path.exists(os.path.join(self.path, "out"))
        print os.path.join(self.path, "out")
        return os.path.join(self.path, "out")


def remove_command(sentence, command):
    return sentence.lstrip()[len(command):].lstrip()


def parse_irc(path, nick, n):
    try:
        for line in tail("-f", path, n=n, _iter=True):
            date, time, nick, sentence = line.split(" ", 3)
            nick = nick[1:-1]
            if nick == NICK:  # I don't want to read myself
                continue

            yield parse(date + " " + time), nick, sentence
    except KeyboardInterrupt:
        return


def handle_commands(nick=NICK, chan="#lqdn-stalk", folder=FOLDER, server=SERVER, n=0):
    chan = Chan(os.path.join(folder, server, chan))
    for datetime, nick, sentence in parse_irc(path=chan.read_path(), nick=NICK, n=n):
        if sentence.startswith("!bouh"):
            chan.write("bah")


def twitter(nick=NICK, chan="#lqdn-stalk", folder=FOLDER, server=SERVER, n=0, account="", password="", host=""):
    if not os.path.exists("debug"):
        os.makedirs("debug")
    chan = Chan(os.path.join(folder, server, chan))
    for datetime, nick, sentence in parse_irc(path=chan.read_path(), nick=NICK, n=n):
        try:
            if sentence.startswith("!len"):
                chan.write(len(remove_command(sentence, "!len").strip()))

            if sentence.startswith("!twitter"):
                tweet = remove_command(sentence, "!twitter")
                if len(tweet.strip()) > 140:
                    chan.write("Tweet is too long! (%s)" % len(tweet.strip()))
                    continue

                # pbs/sh don't managed to make bti accept input from a pipe correctly :(
                debug_log_name = "tweet-%s.log" % datetime.now().strftime("%F-%T")
                return_code = os.system('echo "%s" | bti --account="%s" --password="%s" --action="update" --host="identica" --debug > debug/%s 2>&1' % (tweet, login, password, debug_log_name))
                if return_code == 0:
                    chan.write("Grand succès!")
                else:
                    chan.write("Error :( (more infos in the logs: %s)" % debug_log_name)

            if sentence.startswith("!rt"):
                tweet_id = remove_command(sentence, "!rt").strip()

                if not tweet_id.isdigit():
                    from ipdb import set_trace; set_trace()
                    chan.write("Error: I need a tweet id only composed of numbers")
                    continue

                debug_log_name = "tweet-%s.log" % datetime.now().strftime("%F-%T")
                bti(account=login,
                    password=password,
                    action="update",
                    host="identica",
                    debug=True,
                    retweet=tweet_id,
                    _out=os.path.join("debug", debug_log_name),
                    _err=os.path.join("debug", debug_log_name))
                chan.write("Grand succès!")

        except KeyboardInterrupt:
            print "end"
            sys.exit(0)
        except Exception as e:
            debug_log_name = "error-%s.log" % datetime.now().strftime("%F-%T")
            with open(os.path.join("debug", debug_log_name), "w") as debug_file:
                traceback.print_exc(file=debug_file)
                debug_file.write("%s\n" % e)
                chan.write("Zomg, error! (check logfile %s)" % debug_log_name)


def irc(folder=FOLDER, server=SERVER, port=PORT, nick=NICK, full_name=NICK, *chans):
    try:
        bot = ii(i=folder, s=server, p=port, n=nick, f=full_name, _bg=True)
        sleep(5)
        for chan in chans:
            print "Va joindre %s" % chan.strip()
            open("irc/irc.freenode.net/in", "w").write("/j %s\n" % chan.strip())
        bot.wait()
    except KeyboardInterrupt:
        print "Received ^C, end"
        return
    except Exception as e:
        traceback.print_exc(file=sys.stdout)
        print e


parser = argh.ArghParser()
parser.add_commands([irc, handle_commands, twitter])


if __name__ == '__main__':
    parser.dispatch()
